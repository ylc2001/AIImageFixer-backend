"""
Django settings for image_restoration project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
from image_restoration import utils

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# TODO
# back_url = "http://localhost:8000"
# front_url = "http://localhost:8080"
back_url = "https://aiimagefixer-backend-bugmakers.app.secoder.net"
front_url = "https://aiimagefixer-frontend-bugmakers.app.secoder.net"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-m!a9m4vqgwtp^9k6x3e5cz2f-$@z%o62v$!n805_v$!j7_#i-_'

# SECURITY WARNING: don't run with debug turned on in production!
# TODO
DEBUG = False

ALLOWED_HOSTS = ['*']

INSTALLED_APPS = [
    'corsheaders',  # 新增行
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'image_restoration',
    'picture',
    'exhibit',
    'user',
    "sslserver",
    # "werkzeug_debugger_runserver",
    # "django_extensions",
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'django.template.context_processors.media',
]

CORS_ORIGIN_ALLOW_ALL = False
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = (
    "http://127.0.0.1:8080",
    "https://test-frontend-bugmakers.app.secoder.net",
    "https://aiimagefixer-frontend-bugmakers.app.secoder.net",
    front_url,
)
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
    'Cookie',
)

# Application definition
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_SECURE = True  # 是否Https传输cookie（默认）
SESSION_COOKIE_HTTPONLY = False  # 是否Session的cookie只支持http传输（默认）
SESSION_COOKIE_AGE = 1209600  # Session的cookie失效日期（2周）（默认）
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # 是否关闭浏览器使得Session过期（默认）
SESSION_SAVE_EVERY_REQUEST = False  # 是否每次请求都保存Session，默认修改之后才保存（默认）
SESSION_COOKIE_SAMESITE = 'None'
CSRF_COOKIE_SAMESITE = 'None'
CSRF_COOKIE_SECURE = True
ROOT_URLCONF = 'image_restoration.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'image_restoration.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# TODO
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'image_restoration',  # 数据库名
        'USER': 'root',  # 账号
        'PASSWORD': 'pheDeech3aeR2ieS8quieSo5ucai5Ohm',  # 密码
        'HOST': 'mysql.BugMakers.secoder.local',  # HOST
        # 'PASSWORD': '1341417817dong',  # 密码
        # 'HOST': '127.0.0.1',  # HOST
        'POST': 3306,  # 端口
    }
}
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
        'TIMEOUT': 300,
        "OPTIONS": {
            'MAX_ENTRIES': 300,
            'CULL_FREQUENCY': 2,
        }
    }
}

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

default_repair_name = "repair/default.png"
default_avatar_name = "user/default.png"
default_picture_name = "pictures/default.png"
default_exhibit_name = "default/for_test.png"
default_repair_url = back_url + MEDIA_URL + default_repair_name
default_avatar_url = back_url + MEDIA_URL + default_avatar_name
default_picture_url = back_url + MEDIA_URL + default_picture_name
default_exhibit_url = back_url + MEDIA_URL + default_exhibit_name

# 展览的样式总数
style_num = 8

# 错误信息
message = {
    "method": "提交的方式错误",
    "post": "提交的表单有错误",
    "get": "查询的信息有误",
    "right": "您没有权限",
    "success": "操作成功"
}
